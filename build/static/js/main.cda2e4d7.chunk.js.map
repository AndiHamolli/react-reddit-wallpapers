{"version":3,"sources":["components/wallpaper_item.js","components/wallpapers.js","components/search_bar.js","components/App.js","index.js"],"names":["WallpaperItem","_ref","file","data","preview","enabled","previewImage","images","resolutions","url","replace","subreddit","post_link","permalink","react_default","a","createElement","className","href","target","rel","over_18","src","width","alt","title","source","height","Wallpapers","files","map","wallpaper_item","key","id","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","_this2","type","onChange","event","search","value","name","placeholder","setState","onSearchTermChange","React","Component","App","currentSubreddit","sort","after","before","page","nextPage","fetch","then","res","json","children","window","scrollTo","catch","console","log","prevPage","wallpaperSubreddits","memesSubreddits","allSubreddits","subredditsArray","sorts","changeSubreddit","sub","_this3","length","contentJSX","_this4","searchSubreddit","_","debounce","pagingJSX","buttonNext","onClick","buttonPrev","wallpapers","style","display","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","index","changeSort","search_bar","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.cda2e4d7.chunk.js","sourcesContent":["import React from 'react';\n\nconst WallpaperItem = ({file}) => {\n    if (file.data.preview) {\n        if( file.data.preview.enabled) {\n            let previewImage = file.data.preview ? file.data.preview.images[0].resolutions[2].url : \"http://dummyimage.com\";\n            previewImage = previewImage.replace(/&amp;/g,\"&\");\n            let subreddit = \"https://reddit.com/r/\" + file.data.subreddit;\n            let post_link = \"https://reddit.com\" + file.data.permalink;\n            return (\n                <div className=\"col-sm-12 col-md-6 col-lg-4\">\n                    <div className=\" card-link\">\n                    <div className=\"card\">\n                        <div className=\"card-img-top\">\n                            <a href={post_link} target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"btn btn-secondary btn-sm top-right-float\">View Post</button></a>\n                            <a href={file.data.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {(file.data.over_18) ? <div>NSFW</div> : <img src={previewImage} className=\"card-img-top\" width=\"100%\" alt={file.data.title}/>}\n                            </a>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"card-title\">   \n                                <a href={file.data.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.data.title}</a>\n                            </div>\n                            <p className=\"card-text\">\n                                Resolution: {file.data.preview.images[0].source.width}x{file.data.preview.images[0].source.height}\n                                <br/>Posted on: <a href={subreddit} target=\"_blank\" rel=\"noopener noreferrer\">r/{file.data.subreddit}</a>\n                            </p>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n    return (\n        <div></div>\n    );\n    \n} \n\nexport default WallpaperItem;","import React from 'react';\nimport WallpaperItem from './wallpaper_item';\n\nconst Wallpapers = ({files}) => {\n    return (\n        <div className=\"row\">\n            {files.map((file) => (\n                    <WallpaperItem key={file.data.id} file={file} />  \n            ))}\n        </div>\n    );\n}\n\nexport default Wallpapers;","import React from 'react';\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            term: ''\n        }\n    }\n\n    render() {\n    return (\n        <div className=\"m-2\">\n            <div className=\"input-group mb-2\">\n                <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">r/</div>\n                </div>\n                <input type=\"text\" className=\"form-control\" onChange={event => this.search(event.target.value)} value={this.state.term} name=\"search\" placeholder=\"wallpapers\"/>\n            </div>\n        </div>\n    );\n    }\n\n    search(term) {\n        this.setState({term});\n        this.props.onSearchTermChange(term);\n    }\n}\n\nexport default SearchBar;","import _ from 'lodash';\nimport React from 'react';\nimport Wallpapers from './wallpapers';\nimport SearchBar from './search_bar';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.wallpaperSubreddits = 'wallpapers+wallpaper+widescreenwallpaper+wqhd_wallpaper';\n    this.memesSubreddits = 'memes+dankmemes+memeeconomy+animemes';\n    this.allSubreddits = 'wallpapers+wallpaper+widescreenwallpaper+wqhd_wallpaper+memes+dankmemes+memeeconomy+animemes';\n    this.subredditsArray = ['wallpaper','wallpapers','widescreenwallpaper','wqhd_wallpaper','memes', 'dankmemes', 'memeeconomy','animemes'];\n    this.url = 'https://www.reddit.com/r/';\n    this.sorts = ['hot','new','top','controversial','rising'];\n  }\n    \n  state = {\n    currentSubreddit: 'wallpapers+wallpaper+widescreenwallpaper+wqhd_wallpaper',\n    sort: 'hot',\n    files: [],\n    after: null,\n    before: null,\n    page: 1\n  };\n\n  componentDidMount() {\n    this.changeSubreddit(this.state.currentSubreddit);\n  }\n\n  nextPage = ()=> {\n      fetch(this.url + this.state.currentSubreddit + \"/\" + this.state.sort + \".json?count=\"+ (this.state.page * 25) +\"&after=\" + this.state.after)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({files: data.data.children});\n        this.setState({after: data.data.after});\n        this.setState({before: data.data.before});\n        this.setState({page: this.state.page + 1});\n      window.scrollTo(0,0);\n      })\n      .catch(console.log)\n  }\n\n  prevPage = ()=> {\n    fetch(this.url + this.state.currentSubreddit + \"/\" + this.state.sort + \".json?count=\"+ (((this.state.page - 1) * 25) - 1) +\"&before=\" + this.state.before)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({files: data.data.children});\n      this.setState({after: data.data.after});\n      this.setState({before: data.data.before});\n    window.scrollTo(0,0);\n      if (this.state.page > 1) {\n        this.setState({page: this.state.page - 1});\n      }\n    })\n    .catch(console.log)\n  }\n\n  changeSubreddit(sub) {\n    this.setState({files: []});\n    this.setState({currentSubreddit: sub});\n    this.setState({page: 1})\n    fetch(this.url + sub + \"/\" + this.state.sort + '.json')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({files: data.data.children});\n      this.setState({after: data.data.after});\n      this.setState({before: data.data.before});\n    window.scrollTo(0,0);\n    })\n    .catch(console.log)\n  }\n\n  changeSort(sort) {\n    this.setState({files: []});\n    this.setState({sort: sort});\n    this.setState({page: 1})\n    fetch(this.url + this.state.currentSubreddit + \"/\" + sort + '.json')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({files: data.data.children});\n      this.setState({after: data.data.after});\n      this.setState({before: data.data.before});\n    window.scrollTo(0,0);\n    })\n    .catch(console.log)\n  }\n\n  searchSubreddit(subreddit) {\n    if (subreddit.length !== 0) {\n      this.changeSubreddit(subreddit);\n    } else {\n      this.changeSubreddit(this.allSubreddits);\n    }\n  }\n\n  render () {\n    const searchSubreddit = _.debounce((term) => {this.searchSubreddit(term)}, 600);\n    let contentJSX;\n    if (this.state.files.length > 0) {\n      let pagingJSX;\n      const buttonNext = <button className=\"btn btn-primary\" type=\"submit\" onClick={this.nextPage}>Next</button>;\n      const buttonPrev = <button className=\"btn btn-secondary\" type=\"submit\" onClick={this.prevPage}>Previous</button>;\n      if (this.state.after === null) {\n          // last page\n          pagingJSX = <div>{buttonPrev}</div>;\n      } else if (this.state.before === null) {\n          // first page\n          pagingJSX = <div>{buttonNext}</div>;\n      } else {\n          // in between pages\n          pagingJSX = <div>{buttonPrev} <span className=\"p-3 text-black-50\">Page {this.state.page}</span> {buttonNext}</div>;\n      }\n      contentJSX = <div className=\"m-2\"><Wallpapers files={this.state.files}/><br/><div className=\"center-block m-2\">{pagingJSX}</div></div>;\n    } else {\n      contentJSX = <div className=\"p-2\"><center>Loading...</center></div>;\n    }\n\n    let currentSubreddit;\n    if (this.state.currentSubreddit === this.wallpaperSubreddits) {\n      currentSubreddit = \"All Wallpapers\";\n    } else if (this.state.currentSubreddit === this.memesSubreddits) {\n      currentSubreddit = \"All Memes\";\n    } else {\n      currentSubreddit = \"r/\" + this.state.currentSubreddit;\n    }\n\n    return (\n      <div className=\"container\">\n        <br/>\n        <div>\n          <div className=\"dropdown m-2\" style={{display: \"inline\"}}>\n            <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              {currentSubreddit} &nbsp;\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a className=\"dropdown-item\" href=\"#subChange\" onClick={() => this.changeSubreddit(this.wallpaperSubreddits)}>All Wallpapers</a>\n              <a className=\"dropdown-item\" href=\"#subChange\" onClick={() => this.changeSubreddit(this.memesSubreddits)}>All Memes</a>\n              {this.subredditsArray.map((subreddit, index) => (\n                <a className=\"dropdown-item\" key={index} href=\"#subChange\" onClick={() => this.changeSubreddit(subreddit)}>r/{subreddit}</a>\n              ))}\n            </div>\n          </div>\n          <div className=\"dropdown m-2\" style={{display: \"inline\"}}>\n            <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              {this.state.sort} &nbsp;\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              {this.sorts.map((sort, index) => (\n                <a className=\"dropdown-item\" key={index} href=\"#subChange\" onClick={() => this.changeSort(sort)}>r/{sort}</a>\n              ))}\n            </div>\n          </div>\n          <div className=\"m-3\"></div>\n          <SearchBar onSearchTermChange={term => searchSubreddit(term)}/>\n        </div>\n        <br/>\n        {contentJSX}\n        <br/>\n        <footer><p><center>Open-source available on <a href=\"https://github.com/gauravjot/react-reddit-wallpapers\">Github</a>.</center></p></footer>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}